// Generated by view binder compiler. Do not edit!
package com.example.teste1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teste1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFormCadastroBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCadastrar;

  @NonNull
  public final EditText editEmailCadastro;

  @NonNull
  public final EditText editSenhaCadastro;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView txtLogin;

  private ActivityFormCadastroBinding(@NonNull LinearLayout rootView, @NonNull Button btnCadastrar,
      @NonNull EditText editEmailCadastro, @NonNull EditText editSenhaCadastro,
      @NonNull LinearLayout main, @NonNull TextView txtLogin) {
    this.rootView = rootView;
    this.btnCadastrar = btnCadastrar;
    this.editEmailCadastro = editEmailCadastro;
    this.editSenhaCadastro = editSenhaCadastro;
    this.main = main;
    this.txtLogin = txtLogin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFormCadastroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFormCadastroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_form_cadastro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFormCadastroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cadastrar;
      Button btnCadastrar = ViewBindings.findChildViewById(rootView, id);
      if (btnCadastrar == null) {
        break missingId;
      }

      id = R.id.edit_email_cadastro;
      EditText editEmailCadastro = ViewBindings.findChildViewById(rootView, id);
      if (editEmailCadastro == null) {
        break missingId;
      }

      id = R.id.edit_senha_cadastro;
      EditText editSenhaCadastro = ViewBindings.findChildViewById(rootView, id);
      if (editSenhaCadastro == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.txt_login;
      TextView txtLogin = ViewBindings.findChildViewById(rootView, id);
      if (txtLogin == null) {
        break missingId;
      }

      return new ActivityFormCadastroBinding((LinearLayout) rootView, btnCadastrar,
          editEmailCadastro, editSenhaCadastro, main, txtLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
